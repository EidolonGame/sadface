<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This stores the actual text which the infobox will display
text = ""

//The ix and iy variables are there so we know where to draw the box
//It has to be at a constant place on the moving screen
ix = view_xview[0] + 20
iy = view_yview[0] + 20 

/*

MORE EFFECTS

//This will hold the opacity of the text
//(This is being used to give a sort of "fade-in" effect to the text) 
opacity = 0

//To get the fade-in effect, we need a clock
clock = 0

*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (obj_mouse.selected != noone){
    //string_copy(obj_mouse.selected.info,text)

    ix = window_get_width()/12
    iy = window_get_height()-100
    
    finalx = window_get_width()-300
    finaly = window_get_height()  
    
    
    //This draws the basic text box which will hold the info
    draw_set_alpha(0.75) //Gives a semi-transparent appearance
    depth = -1           //Allows this to be drawn in the foreground
    
    //The following code draws the actual infobox, in the colour of the faction that owns the tile
    if (obj_mouse.selected.owner==-1)
        draw_roundrect_colour(ix, iy, finalx, finaly, c_gray, merge_colour(c_gray,c_white,0.5), false)
    else
        draw_roundrect_colour(ix, iy, finalx, finaly, obj_mouse.selected.owner.colour, merge_colour(obj_mouse.selected.owner.colour,c_white,0.5), false)
    draw_set_colour(c_black)
    draw_set_alpha(1)    //We need to reset the alpha so the other stuff is drawn properly
    draw_text(ix + 30,iy + 15,obj_mouse.selected.info)
    
    //obj_custom_button.visible = true  //If the infobox is being shown, so must the construct button
    
    //Now we draw an image of the area, if there is one
    if (obj_mouse.selected.picture!=-1){
        draw_roundrect_colour(finalx-162.5, iy+2.5, finalx-7.5, iy+82.5, c_white, c_teal, false)
        draw_sprite(obj_mouse.selected.picture,0,finalx-160,iy+5)
    }
    
    
    /*
    if (obj_mouse.selected.owner!=-1){
        btn = instance_create(obj_infobox.finalx-162.5, obj_infobox.iy+90, obj_buttonmanage)
        with (btn){
            canSee = true
            draw_self()
        }
    }
    */
    //SECTION CLOSED OFF FOR NEW BUTTON PURPOSES
    /*
    //Now we draw a button to allow further construction options if the player owns the tile
    if (obj_mouse.selected.owner!=-1){ //CHANGE TO owner != -1, SET TO THIS FOR TESTING PURPOSES!
        with (obj_custom_button){
            x = obj_infobox.finalx-162.5
            y = obj_infobox.iy+90           
            text = "CONSTRUCT"
            active = true              //TODO: Set a destination for the button
            destination = -1
        }
    }
    */
}
else{
    //obj_custom_button.visible=false    //If the infobox isn't being shown, so isn't the button to construct
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
